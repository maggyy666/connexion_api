openapi: 3.0.0
info:
  title: Connexion OpenSearch API
  version: 1.0.0

paths:
  /tenants:
    get:
      summary: Get all tenants
      operationId: app.api.tenants.search
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tenant"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"





  /anomaly_detection/{tenant_id}:
    get:
      summary: Get anomaly detection info for a tenant
      parameters:
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK - Successfully retrieved anomaly detectors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnomalyDetector"
        "default":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


components:
  schemas:
    Tenant:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "Company A"
        data:
          type: string
          example: "Finance"
    AnomalyDetector:
      type: object
      properties:
        detector_id:
          type: string
          example: "detector-finance-01"
        name: 
          type: string
          example: "Finance Anomaly Detector"
        description:
          type: string
          example: "Anomaly detector for finance data"
    ErrorResponse:
      type: object
      required:
        - type
        - title
        - detail
        - status
      properties:
        type:
          type: string
          example: "https://example.com/docs/errors/400"
        title:
          type: string
          example: "Not found"
        detail: 
          type: string
          example: "The requested resource was not found"
        status:
          type: integer
          example: 404
  responses:
    BadRequest:
      description: Bad Request - Invalid request parameters
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/400"
            title: "Bad Request"
            detail: "Invalid request parameters"
            status: 400
    
    Unauthorized:
      description: Unauthorized - Missing or invalid authentication token
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/401"
            title: "Unauthorized"
            detail: "Missing or invalid authentication token"
            status: 401
    TenantNotFound:
      description: Not Found - No tenants found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/404"
            title: "Not Found"
            detail: "No tenants found"
            status: 404
    DetectorNotFound:
      description: Not Found - No anomaly detectors found for the tenant
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/404"
            title: "Not Found"
            detail: "No anomaly detectors found for the tenant"
            status: 404
    Forbidden:
      description: Forbidden - You do not have permission to access this resource
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/403"
            title: "Forbidden"
            detail: "You do not have permission to access this resource"
            status: 403
    InternalServerError:
      description: Server Error - An error occurred on the server
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            type: "https://example.com/docs/errors/500"
            title: "Internal Server Error"
            detail: "An error occurred on the server"
            status: 500



